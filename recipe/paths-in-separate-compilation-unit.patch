diff --git a/lib/CL/CMakeLists.txt b/lib/CL/CMakeLists.txt
index ac11251a..21d1bd25 100644
--- a/lib/CL/CMakeLists.txt
+++ b/lib/CL/CMakeLists.txt
@@ -129,6 +129,7 @@ set(POCL_LIB_SOURCES  "clCreateContextFromType.c"
                    "pocl_runtime_config.c" "pocl_runtime_config.h"
                    "pocl_mem_management.c"  "pocl_mem_management.h"
                    "pocl_hash.c"
+                   "pocl_paths.cc"
                    "pocl_debug.h" "pocl_debug.c" "pocl_timing.c"
                    "clSVMAlloc.c" "clSVMFree.c" "clEnqueueSVMFree.c"
                    "clEnqueueSVMMap.c" "clEnqueueSVMUnmap.c"
diff --git a/lib/CL/pocl_llvm_api.cc b/lib/CL/pocl_llvm_api.cc
index e92d5a57..a5702206 100644
--- a/lib/CL/pocl_llvm_api.cc
+++ b/lib/CL/pocl_llvm_api.cc
@@ -100,7 +100,6 @@ using llvm::legacy::PassManager;
 // causing compilation error if they are included before the LLVM headers.
 #include "pocl_llvm.h"
 #include "pocl_runtime_config.h"
-#include "install-paths.h"
 #include "LLVMUtils.h"
 #include "linker.h"
 #include "pocl_file_util.h"
@@ -110,6 +109,13 @@ using llvm::legacy::PassManager;
 using namespace clang;
 using namespace llvm;
 
+extern "C"
+{
+  const char *conda_pocl_get_srcdir();
+  const char *conda_pocl_get_builddir();
+  const char *conda_pocl_get_pkgdatadir();
+}
+
 
 POP_COMPILER_DIAGS
 
@@ -411,12 +417,17 @@ int pocl_llvm_build_program(cl_program program,
 
   std::string kernelh;
   if (pocl_get_bool_option("POCL_BUILDING", 0)) {
-    kernelh  = SRCDIR;
+    kernelh  = conda_pocl_get_srcdir();
     kernelh += "/include/_kernel.h";
   } else {
-    kernelh = PKGDATADIR;
+    kernelh = conda_pocl_get_pkgdatadir();
     kernelh += "/include/_kernel.h";
   }
+  if (kernelh.find('\0') != std::string::npos)
+  {
+    std::cerr << "[ERROR] Kernel header directory included a null byte." << std::endl;
+    abort();
+  }
   po.Includes.push_back(kernelh);
 
   clang::TargetOptions &ta = pocl_build.getTargetOpts();
@@ -1583,7 +1594,7 @@ kernel_library
   std::string kernellib;
   std::string kernellib_fallback;
   if (pocl_get_bool_option("POCL_BUILDING", 0)) {
-    kernellib = BUILDDIR;
+    kernellib = conda_pocl_get_builddir();
     kernellib += "/lib/kernel/";
     kernellib += subdir;
     // TODO: get this from the TCE target triplet
@@ -1605,7 +1616,7 @@ kernel_library
 #endif
     }
   } else { // POCL_BUILDING == 0, use install dir
-    kernellib = PKGDATADIR;
+    kernellib = conda_pocl_get_pkgdatadir();
     kernellib += "/kernel-";
     kernellib += device->llvm_target_triplet;
     if (is_host) {
diff --git a/lib/CL/pocl_paths.cc b/lib/CL/pocl_paths.cc
new file mode 100644
index 00000000..94782eba
--- /dev/null
+++ b/lib/CL/pocl_paths.cc
@@ -0,0 +1,20 @@
+#include "install-paths.h"
+#include "config.h"
+
+extern "C"
+{
+  const char *conda_pocl_get_srcdir()
+  {
+    return SRCDIR;
+  }
+
+  const char *conda_pocl_get_builddir()
+  {
+    return BUILDDIR;
+  }
+
+  const char *conda_pocl_get_pkgdatadir()
+  {
+    return PKGDATADIR;
+  }
+}
